openapi: 3.0.0
info:
  title: 'MarsDex'
  description: 'MarsDex is a resource indexing tool that you can use to know where you need to go to find the things you need.'
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: 'Local development implementation'
  - url: https://project-ii.ti.howest.be/mars-23
    description: 'Public web api'

tags:
  - name: Colonies
    description: All endpoints relating to colony data.
  - name: Companies
    description: All endpoints relating to company data.
  - name: Utility
    description: Endpoints that are used for testing purposes exclusively
  - name: Notifications
    description: Endpoints that are used for collecting data for the subscriptions

paths:
  /api/message:
    get:
      tags:
        - Utility
      description: Get a nice message
      operationId: getMessage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/saveSubscription:
    post:
      tags:
        - Notifications
      description: save the subscription
      operationId: saveSubscription
      requestBody:
        description: all the details for the subscription
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                endpoint:
                  type: string
                  example: "https://updates.push.services.mozilla.com/wpush/v2/gAAAAABf2â€¦8tOXjPu-UP2rzmlZ8T3JcvdyiyUxtO14CeHjqVBjXhJ4xv9kfsGMcXEvLkPI"
                auth:
                  type: string
                  example: "77_3uUiAbwgk_Z_Q-aYVLA"
                p256dh:
                  type: string
                  example: "BIxpRjzcB5CW6N_e4YUpEeltjzG8LK5oaJ9DC3ema9axCV9YR8-Ke-PG1-d_REx7i629ljvRfoeLHm9yPCasaGA"
      responses:
        '200':
          description: OK
  /api/company/{companyId}:
    get:
      summary: Retrieve company info.
      tags:
        - Companies
      description: Method will return info about the requested company, identified by it's id.
      operationId: getCompanyById
      parameters:
        - in: path
          name: companyId
          schema:
            type: integer
          required: true
          description: id that identifices a company.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 56
                    colony:
                      type: string
                      example: "Jamerson's Landing"
                    name:
                      type: string
                      example: "MarsDex"
                    email:
                      type: string
                      example: "marsdex@mars.com"
                    phoneNumber:
                      type: string
                      example: "+324561772"
        '404':
          description: Company/Method not found
        '500':
          description: Internal Server Error
  /api/colony:
    get:
      summary: List all colonies
      tags:
        - Colonies
      description: Returns a list of all colonies and their locations. Resources aren't included.
      operationId: getColonies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Colony'
        '404':
          description: Method not found
        '500':
          description: Internal Server Error
  /api/colony/{colonyId}:
    get:
      summary: Retrieve a colony's info.
      tags:
        - Colonies
      description: Returns info about a requested colony, identified by it's id.
      operationId: getColonyById
      parameters:
        - in : path
          name: colonyId
          schema:
            type: integer
          required: true
          description : id that identifices a company.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  location:
                    type: object
                    properties:
                      longitude:
                        type: number
                        format: double
                      latitude:
                        type: number
                        format: double
                      altitude:
                        type: number
                        format: double
                  resources:
                    $ref: '#/components/schemas/Resource'
        '404':
          description: Colony/method not found.
        '500':
          description: Internal Server Error
  /api/company/{companyId}/transport:
    get:
      tags:
        - Companies
      summary: Return transports for a company
      description: Returns transports from and to a company. Includes details, sender & receiver.
      operationId: getCompanyTransport
      parameters:
        - name: companyId
          in: path
          required: true
          description: Id that identifies a company.
          schema:
            type: string
      responses:
        '200':
          description: 'Returns a list of all transports'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    shippingId:
                      type: integer
                    status:
                      $ref: '#/components/schemas/Status'
                    resources:
                      $ref: '#/components/schemas/Resource'
                    sendTime:
                      $ref: '#/components/schemas/Time'
                    sender:
                      $ref: '#/components/schemas/Colony'
                    recieveTime:
                      $ref: '#/components/schemas/Time'
                    receiver:
                      $ref: '#/components/schemas/Colony'
        '404':
          description: Company/method not found
        '500':
          description: "Internal Server error"

  /api/company/{companyId}/resource:
    get:
      tags:
        - Companies
      summary: Return resources of a given company
      description: Return resources of a company based on it's id.
      operationId: getCompanyResources
      parameters:
        - name: companyId
          in: path
          required: true
          description: Id that identifies a company.
          schema:
            type: integer
      responses:
        '200':
          description: Returns all company's resources in a JSON Array
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  resources:
                    $ref: '#/components/schemas/Resource'
        '404':
          description: Company/method not found
        '500':
          description: Internal Server Error
    put:
      tags:
        - Companies
      summary: Add resource to company.
      description: Add a resource to a specified company
      operationId: addResourceToCompany
      parameters:
        - name: companyId
          in: path
          required: true
          description: Id that identifies a company.
          schema:
            type: integer
      requestBody:
        description: Define the resource's name & weight
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                weight:
                  type: number
                  format: float
                price:
                  type: number
                  format: float
              required:
                - name
                - weight
                - price
            example:
              - name: Platinum
                weight: 3050.40
                price: 22.235
      responses:
        '200':
          description: Resource has been created and added
          content:
            application/json:
              schema:
                properties:
                  processed:
                    type: boolean
                example:
                  processed: true
        '400':
          description: Faulty request body
        '404':
          description: Company/Method not found
        '409':
          description: Resourse already exists
        '413':
          description: The resource's too big or has too many decimals
        '500':
          description: Internal Server Error
    patch:
      tags:
        - Companies
      summary: Edit a resource
      description: Edit the resource of a company
      operationId: editResourceCompany
      parameters:
        - name: companyId
          in: path
          required: true
          description: Id that identifies a company.
          schema:
            type: integer
      requestBody:
        description: Define the resource's name & weight
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                weight:
                  type: number
                  format: float
              example:
                - name: Platinum
                  weight: 3050.40
              required:
                - name
                - weight
      responses:
        '200':
          description: Resource has been altered
          content:
            application/json:
              schema:
                properties:
                  updated:
                    type: boolean
                example:
                  updated: true
        '400':
          description: Faulty request body
        '404':
          description: Resource/Company/Method could not be found
        '413':
          description: The resource's too big or has too many decimals
        '500':
          description: Internal Server Error
  /api/company/{companyId}/resource/{resourceId}:
    delete:
      tags:
        - Companies
      summary: Removes a resource.
      description: Remove the resource of a company
      operationId: deleteResourceOfCompany
      parameters:
        - name: companyId
          in: path
          required: true
          description: Id that identifies a company.
          schema:
            type: integer
        - name: resourceId
          in: path
          required: true
          description: Id that identifies a resource of a company.
          schema:
            type: integer
      responses:
        '200':
          description: Resource has been deleted
          content:
            application/json:
              schema:
                properties:
                  deleted:
                    type: boolean
                example:
                  deleted: true
        '400':
          description: Faulty request body
        '404':
          description: Resource/Company/Method could not be found
        '500':
          description: Internal Server Error

  /api/company:
    put:
      tags:
        - Companies
      summary: Adds a new company
      description: Adds a new company to the DB.
      operationId: makeCompany
      requestBody:
        description: Login & details of the company
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                name:
                  type: string
                colonyId:
                  type: integer
                password:
                  type: string
                  format: password
                phone:
                  type: string
              required:
                - email
                - name
                - colonyId
                - password
                - phone
              example:
                - name: "MarsDex"
                  colonyId: 3
                  email: MarsDex@mars.com
                  password: ILoveIron
                  phone: "+32456234512"
      responses:
        '201':
          description: "Created Company"
          content:
            application/json:
              schema:
                type: object
                properties:
                  processed:
                    type: boolean
                  id:
                    type: integer
        '400':
          description: Faulty request body
        '404':
          description: Method not found
        '409':
          description: "The e-mail's already in use"
        '500':
          description: "Internal server error"
components:
  schemas:
    Resource:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: "gold"
        weight:
          type: number
          format: double
          example: 200.45
        added:
          type: string
          format: date
          example: "2052-01-20"
        price:
          type: number
          format: double
          example: 20.221
    Company:
      type: object
      properties:
        id:
          type: integer
          example: 5
        colony:
          type: string
          example: "MarsDex"
        name:
          type: string
          example: "Bova Point"
        email:
          type: string
          format: email
          example: "marsdex@mars.com"
    Status:
      type: string
      enum:
        - Payed
        - Processing
        - In Transport
        - Delivered
    Colony:
      type: object
      properties:
        id:
          type: integer
          example: 89
        name:
          type: string
          example: "Bova Point"
        storage:
          type: number
          example: 150000
        location:
          type: object
          properties:
            longitude:
              type: number
              example: 40.236179
            latitude:
              type: number
              example: -70.253211
            altitude:
              type: number
              example: 150
    Time:
      type: object
      nullable: true
      properties:
        date:
          type: string
          format: date
          example: "2050-11-1"
        time:
          type: string
          format: time
          example: "22:22"
