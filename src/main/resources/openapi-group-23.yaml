openapi: 3.0.0
info:
  title: 'MarsDex'
  description: 'MarsDex is a resource indexing tool that you can use to know where you need to go to find the things you need.'
  version: 0.0.1
servers:
  - url: http://localhost:8080
    description: 'Local development implementation'
  - url: https://project-ii.ti.howest.be/mars-23
    description: 'Public web api'

tags:
  - name: Colonies
    description: All endpoints relating to colony data.
  - name: Companies
    description: All endpoints relating to company data.
  - name: Utility
    description: Endpoints that are used for testing purposes exclusively

paths:
  /api/message:
    get:
      tags:
        - Utility
      description: Get a nice message
      operationId: getMessage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/company/{id}:
    get:
      summary: Retrieve company info.
      tags:
        - Companies
      description: get information about the company with given ID.
      operationId: getCompanyById
      parameters:
        - in: path
          name: id
          schema:
            type: id
          required: true
          description: all information about company Id =id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: id
                      example: 56
                    colony:
                      type: string
                      example: "Jamerson's Landing"
                    name:
                      type: string
                      example: "MarsDex"
                    email:
                      type: string
                      example: "marsdex@mars.com"
                    phoneNumber:
                      type: string
                      example: "+324561772"
        '404':
          description: Id not found
        '500':
          description: Server side Issue thats our fault
  /api/colony:
    get:
      summary: List all colonies
      tags:
        - Colonies
      description: Get a list of colonies
      operationId: getColonies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Colony'

        '405':
          description: method not allowed
  /api/colony/{id}:
    get:
      summary: Retrieve a colony's info.
      tags:
        - Colonies
      description: get information about the colony with given ID
      operationId: getColonyById
      parameters:
        - in : path
          name: id
          schema:
            type: id
          required: true
          description : all information about colony Id =id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  location:
                    type: object
                    properties:
                      longitude:
                        type: number
                        format: double
                      latitude:
                        type: number
                        format: double
                      altitude:
                        type: number
                        format: double
                  resources:
                    $ref: '#/components/schemas/Resource'
  /api/company/{id}/transport:
    get:
      tags:
        - Companies
      summary: Return transports for a company
      description: Returns transports from and to a company.
      operationId: getCompanyTransport
      parameters:
        - name: id
          in: path
          required: true
          description: Id that identifies a company.
          schema:
            type: string
      responses:
        '200':
          description: 'Returns a list of all transports'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    shippingId:
                      type: integer
                    status:
                      $ref: '#/components/schemas/Status'
                    resources:
                      $ref: '#/components/schemas/Resource'
                    sendTime:
                     $ref: '#/components/schemas/Time'
                    sender:
                      $ref: '#/components/schemas/Colony'
                    recieveTime:
                      $ref: '#/components/schemas/Time'
                    reciever:
                      $ref: '#/components/schemas/Colony'
        '404':
          description: "Not able to find the given company"
        '505':
          description: "Internal Server error"

  /api/company/{id}/resource:
    get:
      tags:
        - Companies
      summary: Return resources of a given company
      description: Return resources of a company based on it's id.
      operationId: getCompanyResources
      parameters:
        - name: id
          in: path
          required: true
          description: Id that identifies a company.
          schema:
            type: integer
      responses:
        '200':
          description: Returns all company's resources in a JSON Array
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    resources:
                      $ref: '#/components/schemas/Resource'
        '404':
          description: The requested company couldn't be found
        '500':
          description: Internal Server Error
    put:
      tags:
        - Companies
      summary: Add resource to company.
      description: Add a resource to a specified company
      operationId: addResourceToCompany
      parameters:
        - name: id
          in: path
          required: true
          description: Id that identifies a company.
          schema:
            type: integer
      requestBody:
        description: Define the resource's name & weight
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                weight:
                  type: number
                  format: float
            example:
              - name: Platinum
                weight: 3050.40
      responses:
        '201':
          description: Resource has been created and added
        '404':
          description: Company couldn't be found
        '409':
          description: Resourse already exists
        '413':
          description: The resource's too big or has too many decimals
        '500':
          description: Internal Server Error
    patch:
      tags:
        - Companies
      summary: Edit a resource
      description: Edit the resource of a company
      operationId: editResourceCompany
      parameters:
        - name: id
          in: path
          required: true
          description: Id that identifies a company.
          schema:
            type: integer
      requestBody:
        description: Define the resource's name & weight
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                weight:
                  type: number
                  format: float
      responses:
        '200':
          description: Resource has been altered
        '404':
          description: Resource or Company could not be found
        '413':
          description: The resource's too big or has too many decimals
        '500':
          description: Internal Server Error
  /api/company:
    put:
      tags:
        - Companies
      summary: Adds a new company
      description: Adds a new company to the back-end.
      operationId: makeCompany
      requestBody:
        description: Login & details of the company
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                name:
                  type: string
                colony:
                  type: string
                password:
                  type: string
                  format: password
              example:
                - name: "MarsDex"
                  Colony: "Bova Point"
                  email: MarsDex@mars.com
                  password: ILoveIron
      responses:
        '201':
          description: "Created Company"
          content:
            application/json:
              schema:
                type: object
                properties:
                  processed:
                    type: boolean
                  id:
                    type: integer
        '409':
          description: "The e-mail's already in use"
        '500':
          description: "Failed to create account"
components:
  schemas:
    Resource:
      type: object
      properties:
        name:
          type: string
        weight:
          type: number
          format: double
        added:
          type: string
          format: date
        rarity:
          type: number
          format: double
      example:
        - name: "gold"
          weight: 200.45
          added: "2052-01-20"
          rarity: 0.05
    Company:
      type: object
      properties:
        id:
          type: integer
        colony:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
      example:
        - id: 5
          name: "MarsDex"
          Colony: "Bova Point"
          email: MarsDex@mars.com
    Status:
      type: string
      enum:
        - Payed
        - Processing
        - In Transport
        - Delivered
    Colony:
      type: object
      properties:
        id:
          type: integer
          example: 89
        name:
          type: string
          example: "Bova Point"
        storage:
          type: number
          example: 150000
        location:
          type: object
          properties:
            longitude:
              type: number
              example: 40.236179
            latitude:
              type: number
              example: -70.253211
            altitude:
              type: number
              example: 150
    Time:
      type: object
      nullable: true
      properties:
        date:
          type: string
          format: date
          example: "2050-11-1"
        time:
          type: string
          format: time
          example: "22:22"