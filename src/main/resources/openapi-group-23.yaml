openapi: 3.0.0
info:
  title: 'MarsDex'
  description: 'MarsDex API can be used to access information about each colony on Mars.'
  version: 0.0.1
servers:
  - url: http://localhost:8080/
    description: 'Local development implementation'
  - url: https://project-ii.ti.howest.be/mars-23
    description: 'Public web api'
paths:
  /api/message:
    get:
      description: Get a nice message
      operationId: getMessage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/company/{id}:
    get:
      description: get information about the company with given ID
      operationId: GetCompanyByID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: all information about company Id =id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    colony:
                      type: string
                    name:
                      type: string
                    email:
                      type: string
                    phoneNumber:
                      type: number
        '404':
          description: Id not found
        '500':
          description: Server side Issue thats our fault
  /api/colony:
    get:
      description: Get a list of colonies
      operationId: getColonies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    storage:
                      type: number
                    location:
                      type: array
                      items:
                        type: object
                        properties:
                          longitude:
                            type: number
                          latitude:
                            type:  number
                          altitude:
                            type: number
        '405':
          description: method not allowed
  /api/company/{id}/resource:
    get:
      summary: Return resources of a given company
      description: Return resources of a company based on it's id.
      parameters:
        - name: id
          in: path
          required: true
          description: Id that identifies a company.
          schema:
            type: string
      responses:
        '200':
          description: Returns all company's resources in a JSON Array
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    resources:
                      $ref: '#/components/schemas/Resource'
        '404':
          description: The requested company couldn't be found
        '500':
          description: Something has gone wrong on our side

components:
  schemas:
    Resource:
      type: object
      properties:
        name:
          type: string
        weight:
          type: integer
        added:
          type: string
          format: date
        rarity:
          type: integer
      example:
        - name: "gold"
          weight: 200
          added: "2052-01-20"
          rarity: 0.05



