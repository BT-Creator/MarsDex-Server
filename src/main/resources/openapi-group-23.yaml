openapi: 3.0.0
info:
  title: 'MarsDex'
  description: 'MarsDex is a resource indexing tool that you can use to know where you need to go to find the things you need.'
  version: 0.0.1
servers:
  - url: http://localhost:8080
    description: 'Local development implementation'
  - url: https://project-ii.ti.howest.be/mars-23
    description: 'Public web api'
paths:
  /api/message:
    get:
      description: Get a nice message
      operationId: getMessage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/colony:
    get:
      description: Get a list of colonies
      operationId: getColonies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    storage:
                      type: number
                    location:
                      type: array
                      items:
                        type: object
                        properties:
                          longitude:
                            type: number
                          latitude:
                            type:  number
                          altitude:
                            type: number
        '405':
          description: method not allowed
  /api/colony/{id}:
    get:
      description: get information about the colony with given ID
      operationId: GetColonyByID
      parameters:
        - in : path
          name: id
          schema:
            type: string
          required: true
          description : all information about colony Id =id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  location:
                    type: array
                    items:
                      type: object
                      properties:
                        longitude:
                          type: number
                        latitude:
                          type:  number
                        altitude:
                          type: number
                        resources:
                          $ref: '#/components/schemas/Resource'
  /api/company/{id}/transport:
    get:
      summary: Return transports for a company
      description: Returns transports from and to a company.
      operationId: getCompanyResources
      parameters:
        - name: id
          in: path
          required: true
          description: Id that identifies a company.
          schema:
            type: string
      responses:
        '200':
          description: 'Returns a list of all transports'
        '404':
          description: "Not able to find the given company"
        '505':
          description: "Internal Server error"
  /api/company/{id}/resource:
    get:
      summary: Return resources of a given company
      description: Return resources of a company based on it's id.
      operationId: getCompanyResources
      parameters:
        - name: id
          in: path
          required: true
          description: Id that identifies a company.
          schema:
            type: string
      responses:
        '200':
          description: Returns all company's resources in a JSON Array
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    resources:
                      $ref: '#/components/schemas/Resource'
        '404':
          description: The requested company couldn't be found
        '500':
          description: Something has gone wrong on our side
  /api/company:
    put:
      summary: Adds a new company
      description: Adds a new company to the back-end.
      operationId: makeCompany
      requestBody:
        description: Login & details of the company
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                name:
                  type: string
                colony:
                  type: string
                password:
                  type: string
                  format: password
              example:
                - name: "MarsDex"
                  Colony: "Bova Point"
                  email: MarsDex@mars.com
                  password: ILoveIron
      responses:
        '201':
          description: "Created Company"
          content:
            application/json:
              schema:
                type: object
                properties:
                  processed:
                    type: boolean
                  id:
                    type: string
                    format: uuid
        '409':
          description: "The e-mail's already in use"
        '500':
          description: "Failed to create account"
components:
  schemas:
    Resource:
      type: object
      properties:
        name:
          type: string
        weight:
          type: integer
        added:
          type: string
          format: date
        rarity:
          type: integer
      example:
        - name: "gold"
          weight: 200
          added: "2052-01-20"
          rarity: 0.05
    Company:
      type: object
      properties:
        id:
          type: string
          format: uuid
        colony:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
      example:
        - id: "27434bff-b6b2-4333-9ea2-e0bd7a7dd17e"
          name: "MarsDex"
          Colony: "Bova Point"
          email: MarsDex@mars.com
